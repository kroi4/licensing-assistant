[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 5257cd7..3a868e8 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -12,4 +12,4 @@[m [mdist/[m
 .DS_Store[m
 Thumbs.db[m
 .env[m
[31m-.vscode/[m
[32m+[m[32m.vscode/[m
\ No newline at end of file[m
[1mdiff --git a/README.md b/README.md[m
[1mindex b321e4f..807482f 100644[m
Binary files a/README.md and b/README.md differ
[1mdiff --git a/backend/migrate_to_sql.py b/backend/migrate_to_sql.py[m
[1mdeleted file mode 100644[m
[1mindex 3eca96a..0000000[m
[1m--- a/backend/migrate_to_sql.py[m
[1m+++ /dev/null[m
[36m@@ -1,71 +0,0 @@[m
[31m-import json[m
[31m-from models import Base, engine, Session, Rule[m
[31m-[m
[31m-def migrate_data():[m
[31m-    # יצירת הטבלאות[m
[31m-    Base.metadata.create_all(engine)[m
[31m-    [m
[31m-    # קריאת הנתונים מ-JSON[m
[31m-    rules_data = [[m
[31m-        {[m
[31m-            "id": "gas-cert",[m
[31m-            "category": "גז",[m
[31m-            "title": "אישור מתקין גז מוסמך",[m
[31m-            "status": "חובה",[m
[31m-            "note": "נדרש כאשר יש שימוש בגז",[m
[31m-            "conditions": {"features_any": ["gas"]}[m
[31m-        },[m
[31m-        {[m
[31m-            "id": "fire-over-50",[m
[31m-            "category": "כיבוי אש",[m
[31m-            "title": "אישור כיבוי אש מתקדם",[m
[31m-            "status": "חובה",[m
[31m-            "note": "תפוסה ≥ 50",[m
[31m-            "conditions": {"seats_min": 50}[m
[31m-        },[m
[31m-        {[m
[31m-            "id": "area-over-100",[m
[31m-            "category": "בטיחות",[m
[31m-            "title": "מטף נוסף ותכנית פינוי",[m
[31m-            "status": "חובה",[m
[31m-            "note": "שטח ≥ 100 מ״ר",[m
[31m-            "conditions": {"area_min": 100}[m
[31m-        },[m
[31m-        {[m
[31m-            "id": "meat-handling",[m
[31m-            "category": "תברואה",[m
[31m-            "title": "נהלי טיפול בבשר ותיעוד ספקים",[m
[31m-            "status": "חובה",[m
[31m-            "note": "נדרש כאשר מוגש בשר",[m
[31m-            "conditions": {"features_any": ["meat"]}[m
[31m-        },[m
[31m-        {[m
[31m-            "id": "delivery-labels",[m
[31m-            "category": "שילוט/תפעול",[m
[31m-            "title": "סימון אלרגנים ואריזות בטוחות למשלוחים",[m
[31m-            "status": "מומלץ",[m
[31m-            "note": "רלוונטי למשלוחים",[m
[31m-            "conditions": {"features_any": ["delivery"]}[m
[31m-        }[m
[31m-    ][m
[31m-    [m
[31m-    session = Session()[m
[31m-    [m
[31m-    # הכנסת הנתונים ל-SQL[m
[31m-    for rule_data in rules_data:[m
[31m-        conditions = rule_data.pop('conditions', {})[m
[31m-        rule = Rule([m
[31m-            id=rule_data['id'],[m
[31m-            category=rule_data['category'],[m
[31m-            title=rule_data['title'],[m
[31m-            status=rule_data['status'],[m
[31m-            note=rule_data['note'],[m
[31m-            conditions=conditions[m
[31m-        )[m
[31m-        session.add(rule)[m
[31m-    [m
[31m-    session.commit()[m
[31m-    session.close()[m
[31m-[m
[31m-if __name__ == "__main__":[m
[31m-    migrate_data()[m
\ No newline at end of file[m
[1mdiff --git a/backend/models.py b/backend/models.py[m
[1mdeleted file mode 100644[m
[1mindex 39bc12c..0000000[m
[1m--- a/backend/models.py[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-from datetime import datetime[m
[31m-from sqlalchemy import create_engine, Column, Integer, String, JSON, DateTime[m
[31m-from sqlalchemy.ext.declarative import declarative_base[m
[31m-from sqlalchemy.orm import sessionmaker[m
[31m-[m
[31m-Base = declarative_base()[m
[31m-engine = create_engine('sqlite:///restaurant_rules.db')[m
[31m-Session = sessionmaker(bind=engine)[m
[31m-[m
[31m-class Rule(Base):[m
[31m-    __tablename__ = 'rules'[m
[31m-    [m
[31m-    id = Column(String, primary_key=True)[m
[31m-    category = Column(String, nullable=False)[m
[31m-    title = Column(String, nullable=False)[m
[31m-    status = Column(String, nullable=False)[m
[31m-    note = Column(String)[m
[31m-    conditions = Column(JSON)[m
[31m-[m
[31m-class AssessmentLog(Base):[m
[31m-    __tablename__ = 'assessments'[m
[31m-    [m
[31m-    id = Column(Integer, primary_key=True)[m
[31m-    timestamp = Column(DateTime, default=datetime.utcnow)[m
[31m-    area = Column(Integer)[m
[31m-    seats = Column(Integer)[m
[31m-    features = Column(JSON)[m
[31m-    results = Column(JSON)[m
\ No newline at end of file[m
[1mdiff --git a/backend/requirements.txt b/backend/requirements.txt[m
[1mdeleted file mode 100644[m
[1mindex a0de836..0000000[m
[1m--- a/backend/requirements.txt[m
[1m+++ /dev/null[m
[36m@@ -1,4 +0,0 @@[m
[31m-flask==2.3.3[m
[31m-flask-cors==4.0.0[m
[31m-openai==0.28[m
[31m-python-docx==1.1.2[m
[1mdiff --git a/backend/restaurant_rules.db b/backend/restaurant_rules.db[m
[1mdeleted file mode 100644[m
[1mindex 9e205e1..0000000[m
Binary files a/backend/restaurant_rules.db and /dev/null differ
[1mdiff --git a/backend/test_openai.py b/backend/test_openai.py[m
[1mdeleted file mode 100644[m
[1mindex ff9f97d..0000000[m
[1m--- a/backend/test_openai.py[m
[1m+++ /dev/null[m
[36m@@ -1,62 +0,0 @@[m
[31m-import os[m
[31m-from dotenv import load_dotenv[m
[31m-from openai import OpenAI[m
[31m-import json[m
[31m-[m
[31m-def test_openai_connection():[m
[31m-    # טעינת משתני הסביבה[m
[31m-    load_dotenv()[m
[31m-    api_key = os.getenv('OPENAI_API_KEY')[m
[31m-    [m
[31m-    print(f"API Key exists and not empty: {bool(api_key)}")[m
[31m-    print(f"API Key length: {len(api_key) if api_key else 0}")[m
[31m-    [m
[31m-    try:[m
[31m-        client = OpenAI(api_key=api_key)[m
[31m-        response = client.chat.completions.create([m
[31m-            model="gpt-3.5-turbo",[m
[31m-            messages=[{"role": "user", "content": "Say hello"}][m
[31m-        )[m
[31m-        print("\nOpenAI Connection Success!")[m
[31m-        print(f"Response: {response.choices[0].message.content}")[m
[31m-        return True[m
[31m-    except Exception as e:[m
[31m-        print(f"\nError connecting to OpenAI: {str(e)}")[m
[31m-        return False[m
[31m-[m
[31m-def generate_ai_report(business_data, matching_rules):[m
[31m-    prompt = f"""[m
[31m-    אתה יועץ רישוי עסקים. קיבלת את נתוני העסק:[m
[31m-    שטח: {business_data['area']} מ"ר[m
[31m-    מקומות ישיבה: {business_data['seats']}[m
[31m-    מאפיינים: {', '.join(business_data['features'])}[m
[31m-[m
[31m-    דרישות רגולטוריות רלוונטיות:[m
[31m-    {chr(10).join([f"- {r['category']}: {r['title']} ({r['status']})" for r in matching_rules])}[m
[31m-[m
[31m-    נא לנסח דוח קצר וברור בעברית, כולל:[m
[31m-    - סיכום כללי[m
[31m-    - רשימת פעולות נדרשות (לפי סדר חשיבות)[m
[31m-    - טיפים והמלצות[m
[31m-    - אם חסר מידע, ציין זאת ב-open_questions[m
[31m-[m
[31m-    החזר JSON במבנה:[m
[31m-    {{[m
[31m-      "summary": "...",[m
[31m-      "actions": [{{"title": "...", "priority": "high|med|low", "based_on_rule_id": "...", "explanation": "..."}}],[m
[31m-      "tips": ["..."],[m
[31m-      "open_questions": [][m
[31m-    }}[m
[31m-    """[m
[31m-    response = client.chat.completions.create([m
[31m-        model="gpt-3.5-turbo",[m
[31m-        response_format={"type": "json_object"},[m
[31m-        messages=[[m
[31m-            {"role": "system", "content": "אתה יועץ רישוי. אל תוסיף דרישות. אם חסר מידע → open_questions."},[m
[31m-            {"role": "user", "content": prompt}[m
[31m-        ][m
[31m-    )[m
[31m-    return json.loads(response.choices[0].message.content)[m
[31m-[m
[31m-if __name__ == "__main__":[m
[31m-    test_openai_connection()[m
\ No newline at end of file[m
[1mdiff --git a/docs/LEARNING.md b/docs/LEARNING.md[m
[1mnew file mode 100644[m
[1mindex 0000000..af0e21a[m
[1m--- /dev/null[m
[1m+++ b/docs/LEARNING.md[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m## 🎯 האתגרים שנפתרו[m
[32m+[m
[32m+[m[32m### אתגרים טכניים[m
[32m+[m[32m- עיבוד מסמכי Word מורכבים לנתונים מובנים[m
[32m+[m[32m- אינטגרציה חלקה עם OpenAI API[m
[32m+[m[32m- מנגנון fallback חכם למקרי תקלה[m
[32m+[m[32m- ארכיטקטורה מודולרית לקלות תחזוקה[m
[32m+[m
[32m+[m[32m### אתגרים עסקיים[m
[32m+[m[32m- תרגום "שפת חוק" לשפה עסקית מובנת[m
[32m+[m[32m- יצירת דוחות מותאמים אישית ורלוונטיים[m
[32m+[m[32m- הערכת עלויות מציאותית[m
[32m+[m[32m- מתן המלצות פעולה ברורות ושימושיות[m
[32m+[m
[32m+[m[32m## 🚀 שיפורים עתידיים[m
[32m+[m
[32m+[m[32m- **הרחבת בסיס הנתונים**: הוספת תחומי עסק נוספים[m
[32m+[m[32m- **אינטגרציה עם רשויות**: חיבור ישיר למערכות ממשלתיות[m
[32m+[m[32m- **מעקב התקדמות**: מערכת מעקב אחר סטטוס בקשות רישוי[m
[32m+[m[32m- **התראות חכמות**: התראות על תוקף רישיונות ובדיקות נדרשות[m
[32m+[m[32m- **ממשק מתקדם**: שדרוג לממשק משתמש מתוחכם יותר[m
[32m+[m[32m- **תמיכה רב-לשונית**: הוספת תמיכה בשפות נוספות[m
[32m+[m
[32m+[m[32m## 📚 לקחים שנלמדו[m
[32m+[m
[32m+[m[32m### טכנולוגיים[m
[32m+[m[32m- חשיבות ארכיטקטורה מודולרית בפרויקטים מורכבים[m
[32m+[m[32m- יתרונות השימוש בכלי AI לפיתוח מהיר ויעיל[m
[32m+[m[32m- חשיבות מנגנוני fallback במערכות תלויות שירותים חיצוניים[m
[32m+[m
[32m+[m[32m### עסקיים[m
[32m+[m[32m- הצורך בתרגום מידע רגולטורי מורכב לשפה פשוטה[m
[32m+[m[32m- חשיבות המותאמות אישית בכלים עסקיים[m
[32m+[m[32m- ערך הוספת הערכות עלויות מציאותיות[m
\ No newline at end of file[m
[1mdiff --git a/docs/prompts.md b/docs/prompts.md[m
[1mnew file mode 100644[m
[1mindex 0000000..10cc689[m
[1m--- /dev/null[m
[1m+++ b/docs/prompts.md[m
[36m@@ -0,0 +1,156 @@[m
[32m+[m[32m# Prompts שנעשה בהם שימוש במערכת[m
[32m+[m
[32m+[m[32m## 1. 📝 עדכון `docs/prompts.md`[m
[32m+[m
[32m+[m[32mהקובץ צריך להתמקד ב-**Prompts שהמערכת שולחת ל-OpenAI API**:[m
[32m+[m
[32m+[m[32m```markdown[m
[32m+[m[32m# Prompts שנעשה בהם שימוש במערכת[m
[32m+[m
[32m+[m[32m## 1. 🤖 Prompt עיקרי ל-OpenAI API[m
[32m+[m
[32m+[m[32m**מיקום**: `backend/ai_helper.py` - פונקציה `generate_ai_report()`[m
[32m+[m
[32m+[m[32m**מטרה**: יצירת דוח AI מותאם אישית לעסק על בסיס הדרישות הרגולטוריות[m
[32m+[m
[32m+[m[32m**System Message**:[m
[32m+[m[32m```[m
[32m+[m[32mאתה יועץ מומחה לרישוי עסקים בישראל. ענה ב-JSON בלבד.[m
[32m+[m[32m```[m
[32m+[m[32mאתה יועץ מומחה לרישוי עסקים בישראל. תפקידך לנתח את הדרישות הרגולטוריות ולספק המלצות מעשיות.[m
[32m+[m
[32m+[m[32mפרטי העסק:[m
[32m+[m[32m- סוג: מסעדה/בית אוכל[m
[32m+[m[32m- שטח: {area} מ"ר[m
[32m+[m[32m- מקומות ישיבה: {seats}[m
[32m+[m[32m- מאפיינים: {features}[m
[32m+[m
[32m+[m[32mדרישות רגולטוריות רלוונטיות:[m
[32m+[m[32m{rules_text}[m
[32m+[m
[32m+[m[32mנדרש להחזיר JSON במבנה המדויק הבא:[m
[32m+[m[32m{[m
[32m+[m[32m    "summary": {[m
[32m+[m[32m        "assessment": "הערכה כללית של מורכבות התהליך והנקודות העיקריות",[m
[32m+[m[32m        "complexity_level": "high/medium/low",[m
[32m+[m[32m        "estimated_time": "הערכת זמן משוערת לקבלת הרישיון",[m
[32m+[m[32m        "key_challenges": ["אתגר 1", "אתגר 2"][m
[32m+[m[32m    },[m
[32m+[m[32m    "actions": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "title": "כותרת הפעולה - ספציפית ומדידה",[m
[32m+[m[32m            "priority": "high/medium/low",[m
[32m+[m[32m            "category": "תשתית/בטיחות/תברואה/מסמכים",[m
[32m+[m[32m            "based_on_rule_id": "מזהה הכלל הרלוונטי",[m
[32m+[m[32m            "required_professionals": ["אנשי מקצוע נדרשים"],[m
[32m+[m[32m            "estimated_cost_range": "טווח עלויות משוער",[m
[32m+[m[32m            "explanation": "הסבר מפורט כולל דגשים ספציפיים"[m
[32m+[m[32m        }[m
[32m+[m[32m    ],[m
[32m+[m[32m    "potential_risks": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "risk_type": "תפעולי/בטיחותי/רגולטורי",[m
[32m+[m[32m            "description": "תיאור הסיכון",[m
[32m+[m[32m            "impact": "high/medium/low",[m
[32m+[m[32m            "mitigation": "דרכי התמודדות מומלצות"[m
[32m+[m[32m        }[m
[32m+[m[32m    ],[m
[32m+[m[32m    "tips": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "category": "תכנון/בטיחות/תפעול",[m
[32m+[m[32m            "tip": "טיפ מעשי וספציפי",[m
[32m+[m[32m            "benefit": "התועלת/החיסכון מיישום הטיפ"[m
[32m+[m[32m        }[m
[32m+[m[32m    ],[m
[32m+[m[32m    "open_questions": ["שאלות שצריך לברר - רק אם באמת חסר מידע מהותי"],[m
[32m+[m[32m    "budget_planning": {[m
[32m+[m[32m        "fixed_costs": ["פריט עלות - ₪X,XXX-Y,YYY"],[m
[32m+[m[32m        "recurring_costs": ["פריט שוטף - ₪X,XXX לשנה/לחודש"],[m
[32m+[m[32m        "optional_costs": ["פריט אופציונלי - ₪X,XXX-Y,YYY"][m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mחשוב:[m
[32m+[m[32m1. כל הפעולות והטיפים חייבים להיות ספציפיים, מדידים וישימים[m
[32m+[m[32m2. יש לתעדף פעולות לפי דחיפות וחשיבות[m
[32m+[m[32m3. עלויות צריכות להיות מציאותיות ומבוססות על מחירי השוק[m
[32m+[m[32m4. אין להמציא דרישות שלא מופיעות בכללים[m
[32m+[m[32m5. יש להתייחס לכל המאפיינים המיוחדים של העסק[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m**פרמטרים**:[m
[32m+[m[32m- **Model**: `gpt-3.5-turbo`[m
[32m+[m[32m- **Temperature**: Default[m
[32m+[m[32m- **Max Tokens**: לא מוגבל[m
[32m+[m
[32m+[m[32m## 2. 📊 דוגמאות Input/Output[m
[32m+[m
[32m+[m[32m### דוגמת Input:[m
[32m+[m[32m```json[m
[32m+[m[32m{[m
[32m+[m[32m    "area": 120,[m
[32m+[m[32m    "seats": 45,[m
[32m+[m[32m    "features": ["gas", "delivery"][m
[32m+[m[32m}[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### דוגמת Output מצופה:[m
[32m+[m[32m```json[m
[32m+[m[32m{[m
[32m+[m[32m    "summary": {[m
[32m+[m[32m        "assessment": "עסק בינוני בגודל 120 מ\"ר עם 45 מקומות ישיבה...",[m
[32m+[m[32m        "complexity_level": "medium",[m
[32m+[m[32m        "estimated_time": "4-6 חודשים",[m
[32m+[m[32m        "key_challenges": ["אישור מתקין גפ\"מ", "דרישות שליחת מזון"][m
[32m+[m[32m    },[m
[32m+[m[32m    "actions": [...],[m
[32m+[m[32m    "budget_planning": {[m
[32m+[m[32m        "fixed_costs": ["התקנת מערכת גז - ₪8,000-15,000"],[m
[32m+[m[32m        "recurring_costs": ["בדיקות גז - ₪1,500 לשנה"],[m
[32m+[m[32m        "optional_costs": ["שדרוגי בטיחות - ₪5,000-10,000"][m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## 2. 📖 עדכון README - חלק AI Integration[m
[32m+[m
[32m+[m[32mבחלק "🤖 אינטגרציה עם AI" ב-README, נעדכן להתמקד במערכת עצמה:[m
[32m+[m
[32m+[m[32m```markdown[m
[32m+[m[32m## 🤖 אינטגרציה עם AI[m
[32m+[m
[32m+[m[32m### מודל השפה המרכזי[m
[32m+[m[32m- **OpenAI GPT-3.5-turbo**: המודל הראשי ליצירת דוחות מותאמים אישית[m
[32m+[m[32m- **סיבת הבחירה**:[m[41m [m
[32m+[m[32m  - איזון מצוין בין איכות לעלות[m
[32m+[m[32m  - מהירות תגובה טובה[m
[32m+[m[32m  - יכולת עיבוד טקסט בעברית[m
[32m+[m[32m  - יציבות ואמינות גבוהה[m
[32m+[m
[32m+[m[32m### רכיבי AI במערכת[m
[32m+[m[32m- **דוחות חכמים**: ניתוח אוטומטי של דרישות רגולטוריות[m
[32m+[m[32m- **המלצות מותאמות**: פעולות ספציפיות לפי מאפייני העסק[m
[32m+[m[32m- **הערכת עלויות**: חישוב מציאותי של עלויות צפויות[m
[32m+[m[32m- **זיהוי סיכונים**: ניתוח סיכונים פוטנציאליים והמלצות למיטיגציה[m
[32m+[m
[32m+[m[32m### מנגנון Fallback[m
[32m+[m[32m- **דוח בסיסי אוטומטי**: במקרה של תקלה ב-AI[m
[32m+[m[32m- **כללים מובנים**: לוגיקה מקומית לחישוב עלויות ופעולות[m
[32m+[m[32m- **שקיפות למשתמש**: הודעות ברורות על מצב השירות[m
[32m+[m
[32m+[m[32m### Prompts ששימשו[m
[32m+[m[32mהפרומפטים המלאים מתועדים ב-[docs/prompts.md](docs/prompts.md)[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## 3. 🔗 הוספת קישור לתיעוד[m
[32m+[m
[32m+[m[32mנוסיף חלק "📖 תיעוד נוסף" ב-README:[m
[32m+[m
[32m+[m[32m```markdown[m
[32m+[m[32m## 📖 תיעוד נוסף[m
[32m+[m
[32m+[m[32m- **[יומן פיתוח ולקחים](docs/LEARNING.md)** - האתגרים שנפתרו, שיפורים עתידיים ולקחים מהפיתוח[m
[32m+[m[32m- **[Prompts ששימשו במערכת](docs/prompts.md)** - תיעוד מלא של כל הPrompts שהמערכת שולחת ל-OpenAI API[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mזה מתמקד במה שהמערכת **עושה** עם AI, לא באיך **פיתחנו** אותה עם AI.[m
\ No newline at end of file[m
